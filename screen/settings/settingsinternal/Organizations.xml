<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-3.xsd"
        default-menu-title="Organizations" default-menu-index="40" menu-image="fa fa-building" menu-image-type="icon">

    <always-actions>
        <entity-find entity-name="mantle.party.PartyToAndRelationship" list="organizationList" distinct="true">
            <date-filter/>
            <econditions combine="or">
                <econdition field-name="fromPartyId" from="ec.user.userAccount.partyId"/>
                <econdition field-name="visibilityEnumId" value="PvPublic"/>
            </econditions>
            <select-field field-name="toPartyId,ownerPartyId,organizationName,visibilityEnumId"/>
            <order-by field-name="-visibilityEnumId"/></entity-find>
        <set field="ownerOfAnyOrganization" from="organizationList*.ownerPartyId.contains(ec.user.userAccount.partyId)"/>
    </always-actions>

    <transition name="createOrganization">
        <actions>
            <set field="organizationName" from="organizationName.trim()"/>
            <if condition="!organizationName">
                <return type="warning" error="true" message="Must have a valid organization name"/>
            </if>
            <if condition="!organizationId">
                <service-call name="create#mantle.party.Party" in-map="[ownerPartyId:ec.user.userAccount.partyId,partyTypeEnumId:'PtyOrganization',visibilityEnumId:'PvOrganization']" out-map="newOrganization"/>
                <service-call name="create#mantle.party.Organization" in-map="[partyId:newOrganization.partyId,organizationName:organizationName]"/>
                <service-call name="create#mantle.party.PartyRelationship" in-map="[relationshipTypeEnumId:'PrtMember',fromPartyId:ec.user.userAccount.partyId,toRoleTypeId:'OrgInternal',toPartyId:newOrganization.partyId]"/>
                <service-call name="org.moqui.impl.UserServices.set#Preference" in-map="[preferenceKey:'ACTIVE_ORGANIZATION',preferenceValue:newOrganization.partyId]"/>
                <return type="success" message="Successfully created Organization!"/>
            </if>

            <entity-find-one entity-name="mantle.party.Party" value-field="oldOrganization" auto-field-map="[partyId:organizationId]"/>
            <entity-find-count entity-name="mantle.party.PartyActivation" count-field="partyActivationCount">
                <econdition field-name="partyId" from="organizationId"/>
                <date-filter/></entity-find-count>
            <if condition="(oldOrganization.visibilityEnumId||
                    oldOrganization.ownerPartyId==ec.user.userAccount.partyId||
                    organizationList*.toPartyId?.contains(organizationId)) &amp;&amp; (partyActivationCount &gt; 0 || oldOrganization.visibilityEnumId=='PvPublic')">
                <service-call name="create#mantle.party.Party" in-map="[ownerPartyId:ec.user.userAccount.partyId,
                    disabled:oldOrganization.disabled,partyTypeEnumId:oldOrganization.partyTypeEnumId,
                    visibilityEnumId:'PvOrganization']" out-map="newOrganization"/>
                <service-call name="create#mantle.party.Organization" in-map="[partyId:newOrganization.partyId,organizationName:organizationName]"/>
                <service-call name="coarchy.CoarchyServices.activateOrDeactivate#Organization" in-map="[organizationPartyId:newOrganization.partyId]" out-map="context"/>
                <service-call name="org.moqui.impl.UserServices.set#Preference" in-map="[preferenceKey:'ACTIVE_ORGANIZATION',preferenceValue:newOrganization.partyId]"/>

                <entity-find-count entity-name="mantle.party.PartyRelationship" count-field="partyRelationshipCount">
                    <econdition field-name="toPartyId" from="oldOrganization.partyId"/>
                    <econdition field-name="toRoleTypeId" value="OrgInternal"/>
                    <econdition field-name="relationshipTypeEnumId" value="PrtMember"/>
                    <econdition field-name="fromPartyId" from="ec.user.userAccount.partyId"/></entity-find-count>
                <if condition="partyRelationshipCount==0">
                    <service-call name="create#mantle.party.PartyRelationship" in-map="[relationshipTypeEnumId:'PrtMember',fromPartyId:ec.user.userAccount.partyId,toRoleTypeId:'OrgInternal',toPartyId:newOrganization.partyId]"/>
                </if>
                <entity-find entity-name="mantle.party.PartyRelationship" list="partyRelationshipList">
                    <econdition field-name="toPartyId" from="oldOrganization.partyId"/>
                    <econdition field-name="toRoleTypeId" value="OrgInternal"/>
                    <econdition field-name="relationshipTypeEnumId" value="PrtMember"/>
                    <econdition field-name="fromPartyId" from="ec.user.userAccount.partyId" ignore="oldOrganization.visibilityEnumId=='PvOrganization'"/>
                </entity-find>
                <iterate list="partyRelationshipList" entry="partyRelationship">
                    <service-call name="create#mantle.party.PartyRelationship" in-map="[
                        relationshipTypeEnumId:partyRelationship.relationshipTypeEnumId,fromPartyId:partyRelationship.fromPartyId,
                        toRoleTypeId:partyRelationship.toRoleTypeId,toPartyId:newOrganization.partyId,fromDate:partyRelationship.fromDate,
                        thruDate:partyRelationship.thruDate]"/>
                </iterate>

                <entity-find entity-name="mantle.party.PartyContent" list="partyContentList">
                    <econdition field-name="partyId" from="oldOrganization.partyId"/>
                    <econdition field-name="partyContentTypeEnumId" operator="in" value="PcntVision,PcntMission,PcntOriginStory"/>
                </entity-find>
                <iterate list="partyContentList" entry="partyContent">
                    <service-call name="create#mantle.party.PartyContent" in-map="[partyId:newOrganization.partyId,
                        partyContentTypeEnumId:partyContent.partyContentTypeEnumId,description:partyContent.description]"/>
                </iterate>

                <set field="valueStatementIdMap" from="[:]"/>
                <entity-find entity-name="coarchy.ValueStatement" list="valueStatementList">
                    <econdition field-name="organizationId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="valueStatementList" entry="valueStatement">
                    <service-call name="create#coarchy.ValueStatement" in-map="[value:valueStatement.value,typeEnumId:
                        valueStatement.typeEnumId,organizationId:newOrganization.partyId]" out-map="valueStatementContext"/>
                    <script>valueStatementIdMap.put(valueStatement.valueStatementId,valueStatementContext.valueStatementId)</script>
                </iterate>

                <set field="processStoryIdMap" from="[:]"/>
                <entity-find entity-name="coarchy.ProcessStory" list="processStoryList">
                    <econdition field-name="organizationId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="processStoryList" entry="processStory">
                    <service-call name="create#coarchy.ProcessStory" in-map="[name:processStory.name,organizationId:newOrganization.partyId]" out-map="processStoryContext"/>
                    <script>processStoryIdMap.put(processStory.processStoryId,processStoryContext.processStoryId)</script>
                </iterate>

                <set field="actorIdMap" from="[:]"/>
                <entity-find entity-name="coarchy.Actor" list="actorList">
                    <econdition field-name="organizationId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="actorList" entry="actor">
                    <service-call name="create#coarchy.Actor" in-map="[name:actor.name,description:actor.description,organizationId:newOrganization.partyId]" out-map="actorContext"/>
                    <script>actorIdMap.put(actor.actorId,actorContext.actorId)</script>
                </iterate>

                <entity-find entity-name="coarchy.ActorParty" list="actorPartyList">
                    <econdition field-name="organizationId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="actorPartyList" entry="actorParty">
                    <if condition="partyRelationshipList*.fromPartyId?.contains(actorParty.partyId)"><then>
                        <service-call name="create#coarchy.ActorParty" in-map="[actorId:actorIdMap[actorParty.actorId],partyId:actorParty.partyId,organizationId:newOrganization.partyId]"/>
                    </then><else>
<!--                        <log level="warn" message="ActorParty ${actorParty} not created because party is not a member of the organization"/>-->
                    </else></if>
                </iterate>

                <set field="activityIdMap" from="[:]"/>
                <entity-find entity-name="coarchy.Activity" list="activityList">
                    <econdition field-name="organizationId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="activityList" entry="activity">
                    <service-call name="create#coarchy.Activity" in-map="[condition:activity.condition,action:activity.action,implementationId:activity.implementationId,organizationId:newOrganization.partyId]" out-map="activityContext"/>
                    <script>activityIdMap.put(activity.activityId,activityContext.activityId)</script>
                </iterate>

                <set field="checklistWorkEffortIdMap" from="[:]"/>
                <entity-find entity-name="mantle.work.effort.WorkEffort" list="checklistWorkEffortList">
                    <econdition field-name="workEffortTypeEnumId" value="WetChecklist"/>
                    <econdition field-name="ownerPartyId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="checklistWorkEffortList" entry="checklistWorkEffort">
                    <service-call name="create#mantle.work.effort.WorkEffort" in-map="[workEffortName:checklistWorkEffort.workEffortName,
                        actualStartDate:checklistWorkEffort.actualStartDate,workEffortTypeEnumId:checklistWorkEffort.workEffortTypeEnumId,
                        actualCompletionDate:checklistWorkEffort.actualCompletionDate,ownerPartyId:newOrganization.partyId]" out-map="checklistWorkEffortContext"/>
                    <script>checklistWorkEffortIdMap.put(checklistWorkEffort.workEffortId,checklistWorkEffortContext.workEffortId)</script>
                </iterate>

                <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="checklistWorkEffortPartyList">
                    <econdition field-name="workEffortId" operator="in" from="checklistWorkEffortIdMap*.key"/>
                </entity-find>
                <iterate list="checklistWorkEffortPartyList" entry="checklistWorkEffortParty">
                    <if condition="partyRelationshipList*.fromPartyId?.contains(checklistWorkEffortParty.partyId)"><then>
                        <service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[
                            workEffortId:checklistWorkEffortIdMap[checklistWorkEffortParty.workEffortId],
                            partyId:checklistWorkEffortParty.partyId,roleTypeId:checklistWorkEffortParty.roleTypeId,
                            fromDate:checklistWorkEffortParty.fromDate,thruDate:checklistWorkEffortParty.thruDate]"/>
                    </then><else>
<!--                        <log level="warn" message="WorkEffortParty ${checklistWorkEffortParty} not created because party is not a member of the organization"/>-->
                    </else></if>
                </iterate>

                <set field="itemWorkEffortIdMap" from="[:]"/>
                <entity-find entity-name="mantle.work.effort.WorkEffort" list="itemWorkEffortList">
                    <econdition field-name="workEffortTypeEnumId" value="WetChecklistItem"/>
                    <econdition field-name="ownerPartyId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="itemWorkEffortList" entry="itemWorkEffort">
                    <service-call name="create#mantle.work.effort.WorkEffort" in-map="[workEffortName:itemWorkEffort.workEffortName,
                        actualStartDate:itemWorkEffort.actualStartDate,workEffortTypeEnumId:itemWorkEffort.workEffortTypeEnumId,
                        actualCompletionDate:itemWorkEffort.actualCompletionDate,ownerPartyId:newOrganization.partyId,
                        rootWorkEffortId:checklistWorkEffortIdMap[itemWorkEffort.rootWorkEffortId],
                        activityId:activityIdMap[itemWorkEffort.activityId],resolutionEnumId:itemWorkEffort.resolutionEnumId]" out-map="itemWorkEffortContext"/>
                    <script>itemWorkEffortIdMap.put(itemWorkEffort.workEffortId,itemWorkEffortContext.workEffortId)</script>
                </iterate>

                <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="itemWorkEffortPartyList">
                    <econdition field-name="workEffortId" operator="in" from="itemWorkEffortIdMap*.key"/>
                </entity-find>
                <iterate list="itemWorkEffortPartyList" entry="itemWorkEffortParty">
                    <if condition="partyRelationshipList*.fromPartyId?.contains(checklistWorkEffortParty.partyId)"><then>
                        <service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[
                        workEffortId:itemWorkEffortIdMap[itemWorkEffortParty.workEffortId],
                        partyId:itemWorkEffortParty.partyId,roleTypeId:itemWorkEffortParty.roleTypeId,
                        fromDate:itemWorkEffortParty.fromDate,thruDate:itemWorkEffortParty.thruDate]"/>
                    </then><else>
<!--                        <log level="warn" message="WorkEffortParty ${itemWorkEffortParty} not created because party is not a member of the organization"/>-->
                    </else></if>
                </iterate>

                <entity-find entity-name="coarchy.ValueStatementActivity" list="valueStatementActivityList">
                    <econdition field-name="organizationId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="valueStatementActivityList" entry="valueStatementActivity">
                    <service-call name="create#coarchy.ValueStatementActivity" in-map="[valueStatementId:valueStatementIdMap[valueStatementActivity.valueStatementId],activityId:activityIdMap[valueStatementActivity.activityId],organizationId:newOrganization.partyId]"/>
                </iterate>

                <entity-find entity-name="coarchy.ProcessStoryActivity" list="processStoryActivityList">
                    <econdition field-name="organizationId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="processStoryActivityList" entry="processStoryActivity">
                    <service-call name="create#coarchy.ProcessStoryActivity" in-map="[processStoryId:processStoryIdMap[processStoryActivity.processStoryId],activityId:activityIdMap[processStoryActivity.activityId],sequenceNum:processStoryActivity.sequenceNum,detailProcessStoryId:processStoryIdMap[processStoryActivity.detailProcessStoryId],organizationId:newOrganization.partyId]"/>
                </iterate>

                <entity-find entity-name="coarchy.ActivityActor" list="activityActorList">
                    <econdition field-name="organizationId" from="oldOrganization.partyId"/>
                </entity-find>
                <iterate list="activityActorList" entry="activityActor">
                    <service-call name="create#coarchy.ActivityActor" in-map="[activityId:activityIdMap[activityActor.activityId],actorId:actorIdMap[activityActor.actorId], organizationId:newOrganization.partyId]"/>
                </iterate>
            </if>

            <message type="success">Successfully created Organization!</message>
        </actions><default-response url="."/>
    </transition>

    <transition name="inviteUser">
        <service-call name="coarchy.CoarchyServices.invite#User" in-map="[partyId:organizationId,emailAddress:emailAddress]"/>
        <default-response url="../EditOrganization" parameter-map="[organizationId:partyId]"/></transition>

    <transition name="activateOrDeactivateOrganization">
        <service-call name="coarchy.CoarchyServices.activateOrDeactivate#Organization" in-map="[organizationPartyId:toPartyId]" out-map="context"/>
        <actions>
            <if condition="needsCredits">
                <set field="ec.web.sessionAttributes.checkoutOrganizationId" from="toPartyId"/>
                <script>ec.user.setPreference('ACTIVE_ORGANIZATION', toPartyId)</script>
            </if>
        </actions>
        <conditional-response  url="../BuyPremium" parameter-map="[creditsNeeded:creditsNeeded]"><condition>
            <expression>needsCredits</expression></condition></conditional-response>
        <default-response/>
    </transition>

    <transition name="getCloneOrganizationList"><actions>
        <entity-find entity-name="mantle.party.PartyDetail" list="organizationList" distinct="true">
            <econdition field-name="partyTypeEnumId" value="PtyOrganization"/>
            <econditions combine="or">
                <econdition field-name="ownerPartyId" from="ec.user.userAccount.partyId"/>
                <econdition field-name="visibilityEnumId" value="PvPublic"/>
                <econdition field-name="partyId" operator="in" from="organizationList*.toPartyId"/>
            </econditions>
            <select-field field-name="partyId,organizationName,visibilityEnumId"/>
            <order-by field-name="-visibilityEnumId,organizationName"/>
        </entity-find>
        <set field="cloneOrganizationList" from="[]"/>
        <iterate list="organizationList" entry="organization">
            <if condition="organization.visibilityEnumId == 'PvPublic'">
                <script>cloneOrganizationList.add([value:organization.partyId, label:"${organization.visibilityEnumId=='PvPublic'?organization.organizationName+' - Template':organization.organizationName}"])</script>
                <continue/>
            </if>
            <entity-find-count entity-name="mantle.party.PartyActivation" count-field="partyActivationCount">
                <econdition field-name="partyId" from="organization.partyId"/>
                <date-filter/>
            </entity-find-count>
            <if condition="partyActivationCount &gt; 0">
                <script>cloneOrganizationList.add([value:organization.partyId, label:"${organization.visibilityEnumId=='PvPublic'?organization.organizationName+' - Template':organization.organizationName}"])</script>
            </if>
        </iterate>
        <script>
            ec.web.sendJsonResponse(cloneOrganizationList)
        </script>
    </actions>
        <default-response type="none"/>
    </transition>

    <transition name="goToApplication"><actions>
        <entity-find-one entity-name="moqui.security.UserPreference" value-field="userPreference" auto-field-map="[userId:ec.user.userId,preferenceKey:'ACTIVE_ORGANIZATION']"/>
        <if condition="partyId &amp;&amp; userPreference?.preferenceValue != partyId">
            <entity-find-count entity-name="mantle.party.PartyRelationship" count-field="partyRelationshipCount">
                <date-filter/>
                <econdition field-name="relationshipTypeEnumId" value="PrtMember"/>
                <econdition field-name="toRoleTypeId" value="OrgInternal"/>
                <econdition field-name="fromPartyId" from="ec.user.userAccount.partyId"/>
                <econdition field-name="toPartyId" from="partyId"/></entity-find-count>
            <if condition="partyRelationshipCount &gt; 0">
                <service-call name="org.moqui.impl.UserServices.set#Preference" in-map="[preferenceKey:'ACTIVE_ORGANIZATION',preferenceValue:partyId]"/>
            </if>
        </if>
    </actions><default-response url="/coapp/Home" url-type="plain"/></transition>

    <actions>
        <entity-find entity-name="mantle.account.financial.FinancialAccountAndTrans" list="finAccountAndTrans" limit="1">
            <search-form-inputs/>
            <econdition field-name="ownerPartyId" from="ec.user.userAccount.partyId"/>
            <econdition field-name="finAccountTypeId" value="OrganizationMonthCredit"/>
            <econdition field-name="organizationPartyId" value="coarchy"/>
            <econdition field-name="statusId" value="FaActive"/>
            <date-filter/>
            <order-by field-name="-transactionDate"/>
        </entity-find>

        <set field="totalCreditsUsed" from="0.0" type="BigDecimal"/>
        <entity-find entity-name="mantle.party.Party" list="otherOrganizationList">
            <econdition field-name="partyTypeEnumId" value="PtyOrganization"/>
            <econdition field-name="disabled" value="N" or-null="true"/>
            <econdition field-name="ownerPartyId" from="ec.user.userAccount.partyId"/>
            <select-field field-name="partyId"/>
        </entity-find>
        <set field="periodThruDate" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(
                (long) ec.user.nowTimestamp.time), ZoneId.systemDefault()).plusDays(1).truncatedTo(java.time.temporal.ChronoUnit.DAYS).toInstant().toEpochMilli())"/>
        <set field="periodFromDate" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(
                (long) ec.user.nowTimestamp.time), ZoneId.systemDefault()).withDayOfMonth(1).truncatedTo(java.time.temporal.ChronoUnit.DAYS).toInstant().toEpochMilli())"/>
        <iterate list="otherOrganizationList" entry="organization">
            <service-call name="coarchy.CoarchyServices.calculate#PartyActivationUsage" in-map="[organizationPartyId:organization.partyId,periodFromDate:periodFromDate,periodThruDate:periodThruDate]" out-map="context"/>
            <set field="totalCreditsUsed" from="totalCreditsUsed + activationPeriodCount" type="BigDecimal"/>
        </iterate>
    </actions>

    <widgets>
        <container-row>
            <row-col md="2"/>
            <row-col md="8">
                <label text="Organizations" type="h4"/>

                <!-- TODO: Create the feature to transfer org to another user -->
                <label condition="finAccountAndTrans.getFirst() != null&amp;&amp;finAccountAndTrans.getFirst().availableBalance&gt;0"
                        text="Used ~${ec.l10n.formatNumber((Number)(totalCreditsUsed.setScale(2, BigDecimal.ROUND_HALF_UP)),null,null)} / ${ec.l10n.formatNumber((Number)finAccountAndTrans.getFirst().availableBalance,null,null)} Organization-Month Credits this month\n"/>

                <container-dialog id="InviteUser" button-text="Invite User" condition="ownerOfAnyOrganization" type="success">
                    <form-single name="InviteUser" transition="inviteUser">
                        <field name="organizationId"><default-field title="Organization"><drop-down><entity-options text="${organizationName}" key="${partyId}">
                            <entity-find entity-name="mantle.party.PartyDetail">
                                <econdition field-name="partyTypeEnumId" value="PtyOrganization"/>
                                <econdition field-name="ownerPartyId" from="ec.user.userAccount.partyId"/>
                            </entity-find></entity-options> </drop-down></default-field></field>
                        <field name="emailAddress"><default-field><text-line/></default-field></field>
                        <field name="submit"><default-field><submit/></default-field></field>
                    </form-single>
                </container-dialog>

                <container-dialog id="CreateOrganization" button-text="Copy or Create Organization" type="success">
                    <form-single name="CreateOrganization" transition="createOrganization">
                        <field name="organizationId"><default-field title="Copy from Organization (optional)">
                            <label text="Enable premium features to copy from your organizations"/>
                            <drop-down allow-empty="true" required-manual-select="true">
                                <dynamic-options server-search="true" transition="getCloneOrganizationList" min-length="0"/></drop-down>
                        </default-field></field>
                        <field name="organizationName"><default-field><text-line/></default-field></field>
                        <field name="create"><default-field><submit/></default-field></field>
                    </form-single>
                </container-dialog>

                <form-list name="Organization" header-dialog="true" list="organizationFormList" transition="activateOrDeactivateOrganization">
                    <entity-find entity-name="mantle.party.PartyToAndRelationship" list="organizationFormList" distinct="true">
                        <search-form-inputs default-order-by="-visibilityEnumId"/>
                        <date-filter/>
                        <econditions combine="or">
                            <econdition field-name="fromPartyId" from="ec.user.userAccount.partyId"/>
                            <econdition field-name="visibilityEnumId" value="PvPublic"/>
                        </econditions>
                        <select-field field-name="toPartyId,ownerPartyId,organizationName,visibilityEnumId"/></entity-find>

                    <row-actions>
                        <entity-find-count entity-name="mantle.party.PartyActivation" count-field="partyActivationCount">
                            <econdition field-name="partyId" from="toPartyId"/>
                            <date-filter/></entity-find-count>
                    </row-actions>

                    <field name="toPartyId">
                        <header-field><text-find size="25"/></header-field>
                        <default-field><hidden/></default-field></field>
                    <field name="application">
                        <conditional-field title="View Organization" condition="visibilityEnumId=='PvPublic'&amp;&amp;
                                ownerPartyId != ec.user.userAccount.partyId"><link url="goToApplication" text="${organizationName}"
                                parameter-map="[partyId:toPartyId]" tooltip="View ${organizationName} Home"/>
                            <render-mode><text type="qvt"><![CDATA[<q-chip color="red-11" text-color="black">Public</q-chip>
                            <q-chip>Read Only</q-chip>]]></text></render-mode></conditional-field>
                        <conditional-field title="View Organization" condition="visibilityEnumId=='PvPublic'&amp;&amp;
                                ownerPartyId == ec.user.userAccount.partyId"><link url="goToApplication" text="${organizationName}"
                                parameter-map="[partyId:toPartyId]" tooltip="View ${organizationName} Home"/>
                            <render-mode><text type="qvt"><![CDATA[<q-chip color="red-11" text-color="black">Public</q-chip>
                                ]]></text></render-mode></conditional-field>
                        <default-field title="View Organization"><link url="goToApplication" text="${organizationName}"
                                parameter-map="[partyId:toPartyId]" tooltip="View ${organizationName} Home"/></default-field>
                    </field>
                    <field name="organizationName"><conditional-field title="Organization Settings" condition="
                            visibilityEnumId!='PvPublic'||ownerPartyId == ec.user.userAccount.partyId">
                        <link url="/settings/EditOrganization" text="${organizationName}" parameter-map="[
                            organizationId:toPartyId]" tooltip="Edit ${organizationName}"/></conditional-field></field>
                    <field name="activation"><header-field title="Premium"><hidden/></header-field>
                        <conditional-field title="Premium" condition="ownerPartyId == ec.user.userAccount.partyId
                                &amp;&amp; partyActivationCount == 0">
                            <submit text="Upgrade" type="success" confirmation="Activating will cost 1 Organization-Month
                             Credit per month while ${organizationName} is upgraded. Are you sure?"/></conditional-field>
                        <conditional-field title="Premium" condition="ownerPartyId == ec.user.userAccount.partyId
                                &amp;&amp; partyActivationCount != 0">
                            <submit text="Downgrade" type="danger"/></conditional-field>
                    </field>
                    <field name="submit"><header-field><submit/></header-field></field>
                </form-list>
            </row-col>
            <row-col md="2"/>
        </container-row>
    </widgets>
</screen>
