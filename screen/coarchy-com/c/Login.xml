<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-3.xsd"
        require-authentication="anonymous-view" allow-extra-path="true">

    <!-- login: for client applications that use a Moqui UserAccount -->
    <transition name="login" method="post" require-session-token="false">
        <!-- NOTE: login is a transition here instead of a Service REST endpoint under /rest/s1/moqui/... as a special case to not require session token -->
        <parameter name="username" required="true"/>
        <parameter name="password" required="true"/>
        <parameter name="code"/>
        <actions>
            <set field="loggedIn" from="ec.user.loginUser(username, password)"/>
            <if condition="ec.message.hasError()"><script>ec.web.sendJsonResponse([loggedIn:false])</script></if>

            <if condition="ec.web.sessionAttributes.moquiAuthcFactorRequired"><then>
                <if condition="code"><then>
                    <service-call name="org.moqui.impl.UserServices.validate#ExternalUserAuthcCode"
                            in-map="[code:code]" out-map="validateOut"/>
                    <if condition="validateOut.verified"><then>
                        <script>ec.user.internalLoginUser(validateOut.username)</script>
                        <return/>
                    </then><else>
                        <message type="danger" public="true">Authentication code is not valid</message>
                    </else></if>
                </then></if>

                <!-- if we didn't return above send back info about user's authc factors -->
                <service-call name="org.moqui.impl.UserServices.get#ExternalUserAuthcFactorInfo" out-map="factorInfoOut"/>
                <script>ec.web.sendJsonResponse(factorInfoOut)</script>
            </then><else>
                <script>ec.web.sendJsonResponse([loggedIn:loggedIn])</script>
            </else></if>

            <if condition="loggedIn">
                <entity-find-count entity-name="mantle.party.PartyClassificationAppl" count-field="partyClassificationCount">
                    <econdition field-name="partyId" from="ec.user.userAccount.partyId"/></entity-find-count>
                <entity-find entity-name="mantle.party.PartyClassificationAppl" list="partyClassificationList">
                    <econdition field-name="partyId" from="ec.user.userAccount.partyId"/>
                    <econdition field-name="partyClassificationId" operator="in" from="['ColdLead','Prospect']"/>
                    <date-filter/></entity-find>

                <if condition="partyClassificationList.size() &gt; 0 || (partyClassificationCount == 0 &amp;&amp; partyClassificationList.size() == 0)">
                    <service-call name="coarchy.CoarchyServices.set#PartyClassification" in-map="[partyClassificationId:'HotLead']" out-map="context"/>
                </if>
<!--                <log level="warn" message="login context.toString() ${context.toString()}"/>-->
            </if>

        </actions>
        <default-response type="none"/>
    </transition>
    <transition name="logout"><actions><script>ec.user.logoutUser()</script></actions>
        <default-response url="/"/><error-response url="."/></transition>
    <transition name="createInitialAdminAccount"><condition><expression>ec.entity.find('moqui.security.UserAccount').disableAuthz().count() == 1</expression></condition>
        <service-call name="org.moqui.impl.UserServices.create#InitialAdminAccount"/>
        <default-response url="../Login"/>
        <error-response url="."/>
    </transition>

    <pre-actions><script>
        // if user already logged in redirect to application
        if (ec.user.userId) sri.sendRedirectAndStopRender('/settings')
    </script>
        <set field="baseLinkUrl" from="!'production'.equals(System.getProperty('instance_purpose')) ? 'http://localhost:8080' : 'https://coarchy.com'"/>
        <set field="imageUrl" value="/cstatic/background.jpg"/>

        <set field="head_keywords" value="coarchy log in"/>
        <set field="head_title" value="Coarchy Log In: Log In to Coarchy to Achieve Greatness"/>
        <set field="head_description" value="Log In to Coarchy to Achieve Greatness"/>
        <set field="html_image" from="baseLinkUrl + imageUrl"/>
        <set field="html_url" from="baseLinkUrl+'/Login'"/>
        <set field="html_type" value="website"/>
        <set field="html_site_name" value="Coarchy"/>
    </pre-actions>
    <widgets>
        <section name="NeedsSetupSection" condition="ec.entity.find('moqui.security.UserAccount').disableAuthz().count() > 1"><widgets>
            <render-mode>
                <text type="html"><![CDATA[
                    <div style="">
                        <div class="row">
                            <div class="col-md-4 offset-md-4 col-xs-12 offset-xs-0">
                                <div class="column justify-center" style="height: 150px">
                                    <div class="col-4">
                                        <q-card flat bordered style="width: 100%;" class="col-4 bg-grey-1" data-aos="fade-in" data-aos-easing="ease-in-out-cubic">
                                            <q-card-section>
                                                <div class="text-h2">Log In</div>
                                            </q-card-section>

                                            <q-card-section>
                                                <c-login></c-login>
                                            </q-card-section>
                                        </q-card>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    ]]></text></render-mode>
        </widgets><fail-widgets>
            <!-- if there are no user accounts, other than the _NA_ UserAccount which is in seed data, show form to create admin account -->
            <render-mode><text type="html"><![CDATA[
                <div class="text-center">
                    <h3>Welcome to your new system</h3>
                    <form method="post" action="${sri.buildUrl("createInitialAdminAccount").url}" class="qa-ma-lg" id="InitialAdminForm">
                    <p class="text-muted text-center">There are no user accounts, get started by creating an initial administrator account</p>
                    <input type="hidden" name="moquiSessionToken" value="${ec.web.sessionToken}">
                    <input type="text" name="username" value="${(ec.getWeb().getErrorParameters().get("username"))!""}" placeholder="Username" required="required" class="form-control top">
                    <input type="password" name="newPassword" placeholder="New Password" required="required" class="form-control middle">
                    <input type="password" name="newPasswordVerify" placeholder="New Password Verify" required="required" class="form-control middle">
                    <input type="text" name="userFullName" value="${(ec.getWeb().getErrorParameters().get("userFullName"))!""}" placeholder="User Full Name" required="required" class="form-control middle">
                    <input type="text" name="emailAddress" value="${(ec.getWeb().getErrorParameters().get("emailAddress"))!""}" placeholder="Email Address" required="required" class="form-control bottom">
                    <button class="btn btn-lg btn-primary btn-block" type="submit">Create Initial Admin Account</button>
                    </form>
                </div>
                ]]></text></render-mode>
        </fail-widgets></section>

    </widgets>
</screen>
