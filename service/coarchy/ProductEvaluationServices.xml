<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <!-- Product Eval -->
    <service verb="create" noun="ProductEvaluation">
        <in-parameters>
            <parameter name="productId" required="true" />
            <parameter name="organizationId" required="true" />
            <parameter name="emailAddress" required="true" />
            <parameter name="processStoryIds" type="List" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.product.Product" value-field="product" />

            <if condition="!product">
                <return error="true" message="Product ${productId} not found." />
            </if>

            <service-call name="create#coarchy.product.ProductEvaluation"
                in-map="[productId:productId, organizationId:organizationId, statusId: 'PeRequirementsSelection']"
                out-map="context" />

            <iterate list="processStoryIds" entry="processStoryId">
                <service-call name="create#coarchy.product.ProductEvaluationStory"
                    in-map="[productEvaluationId:productEvaluationId, processStoryId:processStoryId]" />
            </iterate>

            <!-- By default, add all value statements in this organization to ProductEvaluation -->
            <entity-find entity-name="coarchy.ValueStatement" list="valueStatementList">
                <econdition field-name="organizationId" />
                <order-by field-name="sequenceNum,value" />
            </entity-find>

            <iterate list="valueStatementList" entry="valueStatement">
                <service-call name="create#coarchy.product.ProductEvaluationStatement"
                in-map="[productEvaluationId:productEvaluationId, statementId:valueStatement.valueStatementId]" />
            </iterate>
            
            <!-- add process stories -->
            <set field="allProcessStoryIds" from="processStoryIds.clone()" />
            <iterate list="processStoryIds" entry="processStoryId">
                <service-call name="coarchy.ProductEvaluationServices.get#ProcessStoryDescendants"
                    out-map="descOut" out-map-add-to-existing="false"
                    in-map="[processStoryId:processStoryId]" />
                <script>allProcessStoryIds.addAll(descOut.descendantIdList)</script>
            </iterate>

            <entity-find entity-name="coarchy.ProcessStoryActivityDetail" list="processStoryActivityList">
                <econdition field-name="processStoryId" operator="in" from="allProcessStoryIds" />
                <econditions combine="or">
                    <econdition field-name="condition" operator="not-equals" value="" />
                    <econdition field-name="action" operator="not-equals" value="" />
                </econditions>
                <select-field field-name="processStoryId,activityId,condition,action" />
            </entity-find>

            <iterate list="processStoryActivityList" entry="processStoryActivity">
                <service-call name="create#coarchy.product.ProductEvaluationActivity"
                in-map="[productEvaluationId:productEvaluationId, processStoryId:processStoryActivity.processStoryId, activityId:processStoryActivity.activityId]" />
            </iterate>

            <!-- add vendor -->
            <service-call name="coarchy.VendorServices.add#ProductEvaluationParty"
            in-map="[productEvaluationId:productEvaluationId, emailAddress:emailAddress]" />
            
        </actions>
    </service>

    <service verb="add" noun="ProductEvaluationProcessStory">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
            <parameter name="organizationId" required="true" />
            <parameter name="processStoryIds" type="List" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <if condition="productEvaluation.statusId != 'PeRequirementsSelection'">
                <return error="true" message="Cannot edit activities in this status." />
            </if>

            <set field="newProcessStoryIds" from="new TreeSet()" />
            <iterate list="processStoryIds" entry="processStoryId">
                <entity-find-count entity-name="coarchy.product.ProductEvaluationStory"
                    count-field="productEvaluationStoryCount">
                    <econdition field-name="productEvaluationId" />
                    <econdition field-name="processStoryId" />
                </entity-find-count>

                <if condition="!productEvaluationStoryCount">
                    <service-call name="create#coarchy.product.ProductEvaluationStory"
                    in-map="[productEvaluationId:productEvaluationId, processStoryId:processStoryId]" />
                    
                    <service-call name="coarchy.ProductEvaluationServices.get#ProcessStoryDescendants"
                    out-map="descOut" out-map-add-to-existing="false"
                    in-map="[processStoryId:processStoryId]" />
                    <script>newProcessStoryIds.add(processStoryId)</script>
                    <script>newProcessStoryIds.addAll(descOut.descendantIdList)</script>
                </if>
            </iterate>

            <!-- add activities -->
            <entity-find entity-name="coarchy.ProcessStoryActivityDetail" list="processStoryActivityList">
                <econdition field-name="processStoryId" operator="in" from="newProcessStoryIds" />
                <econditions combine="or">
                    <econdition field-name="condition" operator="not-equals" value="" />
                    <econdition field-name="action" operator="not-equals" value="" />
                </econditions>
                <select-field field-name="processStoryId,activityId,condition,action" />
            </entity-find>

            <iterate list="processStoryActivityList" entry="processStoryActivity">
                <entity-find-count entity-name="coarchy.product.ProductEvaluationActivity" count-field="existingCount">
                    <econdition field-name="productEvaluationId" />
                    <econdition field-name="processStoryId" from="processStoryActivity.processStoryId" />
                    <econdition field-name="activityId" from="processStoryActivity.activityId" />
                </entity-find-count>
                <if condition="existingCount">
                    <!-- <set field="activity" from="ec.resource.template('component://coarchy/template/Activity.html.ftl', '.ftl')"/> -->
                    <!-- <message type="warning"> Activity ${activity} is already included.</message> -->
                    <continue />
                </if>
                <service-call name="create#coarchy.product.ProductEvaluationActivity"
                in-map="[productEvaluationId:productEvaluationId, processStoryId:processStoryActivity.processStoryId, activityId:processStoryActivity.activityId]" />
            </iterate>
        </actions>
    </service>

    <service verb="remove" noun="ProductEvaluationProcessStory">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
            <parameter name="organizationId" required="true" />
            <parameter name="processStoryId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <if condition="productEvaluation.statusId != 'PeRequirementsSelection'">
                <return error="true" message="Cannot edit activities in this status." />
            </if>

            <entity-find entity-name="coarchy.product.ProductEvaluationStory"
                list="productEvaluationStoryList">
                <econdition field-name="productEvaluationId" />
                <econdition field-name="processStoryId" />
            </entity-find>

            <iterate list="productEvaluationStoryList" entry="productEvaluationStory">
                <service-call name="delete#coarchy.product.ProductEvaluationStory"
                    in-map="[productEvaluationId:productEvaluationStory.productEvaluationId, processStoryId:productEvaluationStory.processStoryId]" />
            </iterate>

            <service-call name="coarchy.ProductEvaluationServices.get#ProcessStoryDescendants"
            out-map="descOut" out-map-add-to-existing="false"
            in-map="[processStoryId:processStoryId]" />

            <entity-delete-by-condition entity-name="coarchy.product.ProductEvaluationActivity">
                <econdition field-name="productEvaluationId" />
                <econdition field-name="processStoryId" operator="in" from="[processStoryId]+descOut.descendantIdList" />
            </entity-delete-by-condition>
        </actions>
    </service>

    <service verb="get" noun="ProcessStoryDescendants">
        <in-parameters>
            <parameter name="processStoryId" required="true" />
        </in-parameters>
        <out-parameters>
            <parameter name="descendantIdList" type="List" />
        </out-parameters>
        <actions>
            <set field="descendantIdList" from="[]" />
            <entity-find entity-name="coarchy.ProcessStoryActivity" list="processStoryActivityList">
                <econdition field-name="processStoryId" />
                <econdition field-name="detailProcessStoryId" operator="is-not-null" />
            </entity-find>

            <iterate list="processStoryActivityList" entry="processStoryActivity">
                <script>
                    descendantIdList.add(processStoryActivity.detailProcessStoryId)
                </script>

                <service-call name="coarchy.ProductEvaluationServices.get#ProcessStoryDescendants"
                    out-map="descOut" out-map-add-to-existing="false"
                    in-map="[processStoryId:processStoryActivity.detailProcessStoryId]" />

                <script>descendantIdList.addAll(descOut.descendantIdList)</script>
            </iterate>

        </actions>
    </service>

    <service verb="get" noun="ProcessStoryAnscestors">
        <in-parameters>
            <parameter name="processStoryId" required="true" />
        </in-parameters>
        <out-parameters>
            <parameter name="anscestorIdList" type="List" />
        </out-parameters>
        <actions>
            <set field="anscestorIdList" from="[]" />
            <entity-find entity-name="coarchy.ProcessStoryActivity" list="processStoryActivityList">
                <econdition field-name="detailProcessStoryId" from="processStoryId" />
            </entity-find>

            <iterate list="processStoryActivityList" entry="processStoryActivity">
                <script>
                    anscestorIdList.add(processStoryActivity.processStoryId)
                </script>

                <service-call name="coarchy.ProductEvaluationServices.get#ProcessStoryAnscestors"
                    out-map="anscOut" out-map-add-to-existing="false"
                    in-map="[processStoryId:processStoryActivity.processStoryId]" />

                <script>anscestorIdList.addAll(anscOut.anscestorIdList)</script>
            </iterate>

        </actions>
    </service>

    <service verb="get" noun="ProductEvaluationActivites">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
        </in-parameters>
        <out-parameters>
            <parameter name="processStoryIds" />
            <parameter name="activityIds" />
            <parameter name="activityList" />
        </out-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <entity-find entity-name="coarchy.product.ProductEvaluationStory"
                list="productEvaluationStoryList">
                <econdition field-name="productEvaluationId" />
            </entity-find>

            <set field="processStoryIds" from="productEvaluationStoryList*.processStoryId" />

            <iterate list="productEvaluationStoryList" entry="productEvaluationStory">
                <service-call name="coarchy.ProductEvaluationServices.get#ProcessStoryDescendants"
                    out-map="descOut" out-map-add-to-existing="false"
                    in-map="[processStoryId:productEvaluationStory.processStoryId]" />
                <script>processStoryIds.addAll(descOut.descendantIdList)</script>
            </iterate>

            <entity-find entity-name="coarchy.product.ProductEvaluationActivity"
                list="includedActivityList">
                <econdition field-name="productEvaluationId" />
                <econdition field-name="excludeFlag" value="N" or-null="true" />
            </entity-find>

            <entity-find entity-name="coarchy.ProcessStoryActivityDetail" list="activityList">
                <econdition field-name="processStoryId" operator="in" from="processStoryIds" />
                <econdition field-name="activityId" operator="in" from="includedActivityList*.activityId" />
                <econditions combine="or">
                    <econdition field-name="condition" operator="not-equals" value="" />
                    <econdition field-name="action" operator="not-equals" value="" />
                </econditions>
                <select-field field-name="processStoryId,activityId,condition,action" />
            </entity-find>

            <set field="activityIds" from="activityList*.activityId" />
        </actions>
    </service>
    
    <service verb="get" noun="ProductEvaluationStatements">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
        </in-parameters>
        <out-parameters>
            <parameter name="valueStatementIds" />
            <parameter name="valueStatementList" />
            <parameter name="allValueStatementList" />
            <parameter name="allValueStatementIds" />
        </out-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <entity-find entity-name="coarchy.ValueStatement" list="allValueStatementList">
                <econdition field-name="organizationId" operator="in" from="productEvaluation.organizationId" />
                <select-field field-name="valueStatementId,value" />
            </entity-find>
            <set field="allValueStatementIds" from="allValueStatementList*.valueStatementId" />

            <entity-find entity-name="coarchy.product.ProductEvaluationStatement"
                list="productEvaluationStatementList">
                <econdition field-name="productEvaluationId" />
            </entity-find>
            <set field="valueStatementIds" from="productEvaluationStatementList*.statementId" />

            <entity-find entity-name="coarchy.ValueStatement" list="valueStatementList">
                <econdition field-name="valueStatementId" operator="in" from="valueStatementIds" />
                <select-field field-name="valueStatementId,value" />
            </entity-find>
        </actions>
    </service>

    <!-- Activity include/exclude -->
    <service verb="exclude" noun="ProductEvaluationActivity">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
            <parameter name="processStoryId" required="true" />
            <parameter name="activityId" required="true" />
        </in-parameters>
        <out-parameters>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <if condition="productEvaluation.statusId != 'PeRequirementsSelection'">
                <return error="true" message="Cannot edit activities in this status." />
            </if>

            <entity-find entity-name="coarchy.product.ProductEvaluationActivity"
                list="excludedActivityList">
                <econdition field-name="productEvaluationId" />
                <econdition field-name="processStoryId" />
                <econdition field-name="activityId" />
                <econdition field-name="excludeFlag" value="Y" />
            </entity-find>

            <if condition="!excludedActivityList">
                <service-call name="update#coarchy.product.ProductEvaluationActivity"
                    in-map="[productEvaluationId:productEvaluationId, processStoryId:processStoryId, activityId:activityId, excludeFlag:'Y']" />

                <!-- Automatically exclude all activities of any child process stories -->
                <entity-find-one entity-name="coarchy.ProcessStoryActivity" value-field="psActivity">
                    <field-map field-name="activityId" />
                </entity-find-one>

                <if condition="psActivity.detailProcessStoryId">
                    <service-call name="coarchy.ProductEvaluationServices.get#ProcessStoryDescendants"
                    out-map="descOut" out-map-add-to-existing="false"
                    in-map="[processStoryId:psActivity.detailProcessStoryId]" />

                    <entity-find entity-name="coarchy.ProcessStoryActivityDetail" list="activityList">
                        <econdition field-name="processStoryId" operator="in" from="[psActivity.detailProcessStoryId] + descOut.descendantIdList" />
                        <econditions combine="or">
                            <econdition field-name="condition" operator="not-equals" value="" />
                            <econdition field-name="action" operator="not-equals" value="" />
                        </econditions>
                        <select-field field-name="processStoryId,activityId,condition,action" />
                    </entity-find>

                    <iterate list="activityList" entry="activity">            
                        <service-call name="coarchy.ProductEvaluationServices.exclude#ProductEvaluationActivity" in-map="[productEvaluationId:productEvaluationId, processStoryId:activity.processStoryId, activityId:activity.activityId]"/>
                    </iterate>
                </if>
            </if>
        </actions>
    </service>

    <service verb="include" noun="ProductEvaluationActivity">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
            <parameter name="processStoryId" required="true" />
            <parameter name="activityId" required="true" />
        </in-parameters>
        <out-parameters>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <if condition="productEvaluation.statusId != 'PeRequirementsSelection'">
                <return error="true" message="Cannot edit activities in this status." />
            </if>

            <entity-find entity-name="coarchy.product.ProductEvaluationActivity"
                list="excludedActivityList">
                <econdition field-name="productEvaluationId" />
                <econdition field-name="processStoryId" />
                <econdition field-name="activityId" />
                <econdition field-name="excludeFlag" value="Y" />
            </entity-find>

            <if condition="!excludedActivityList">
                <service-call name="store#coarchy.product.ProductEvaluationActivity"
                    in-map="[productEvaluationId:productEvaluationId, processStoryId:processStoryId, activityId:activityId, excludeFlag:'N']" />
            </if>

            <iterate list="excludedActivityList" entry="excludedActivity">
                <service-call name="update#coarchy.product.ProductEvaluationActivity"
                    in-map="[productEvaluationId:productEvaluationId, processStoryId:processStoryId, activityId:activityId, excludeFlag:'N']" />

                <!-- Automatically include all activities of any anscestor process stories -->
                <entity-find-one entity-name="coarchy.ProcessStoryActivity" value-field="psActivity">
                    <field-map field-name="activityId" />
                </entity-find-one>

                <if condition="psActivity.processStoryId">
                    <service-call name="coarchy.ProductEvaluationServices.get#ProcessStoryAnscestors"
                    out-map="anscOut" out-map-add-to-existing="false"
                    in-map="[processStoryId:psActivity.processStoryId]" />

                    <entity-find entity-name="coarchy.ProcessStoryActivityDetail" list="activityList">
                        <econdition field-name="processStoryId" operator="in" from="anscOut.anscestorIdList" />
                        <econditions combine="or">
                            <econdition field-name="condition" operator="not-equals" value="" />
                            <econdition field-name="action" operator="not-equals" value="" />
                        </econditions>
                        <select-field field-name="processStoryId,activityId,condition,action" />
                    </entity-find>

                    <iterate list="activityList" entry="activity">            
                        <service-call name="coarchy.ProductEvaluationServices.include#ProductEvaluationActivity" in-map="[productEvaluationId:productEvaluationId, processStoryId:activity.processStoryId, activityId:activity.activityId]"/>
                    </iterate>
                </if>
            </iterate>
        </actions>
    </service>

    <!-- Value statement include/exclude -->
    <service verb="exclude" noun="ProductEvaluationStatement">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
            <parameter name="statementId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <if condition="productEvaluation.statusId != 'PeRequirementsSelection'">
                <return error="true" message="Cannot edit statements in this status." />
            </if>

            <entity-find entity-name="coarchy.product.ProductEvaluationStatement"
                list="existingStatementList">
                <econdition field-name="productEvaluationId" />
                <econdition field-name="statementId" />
            </entity-find>

            <iterate list="existingStatementList" entry="existingStatement">
                <service-call name="delete#coarchy.product.ProductEvaluationStatement"
                    in-map="[productEvaluationId:productEvaluationId, statementId:existingStatement.statementId]" />
            </iterate>           
        </actions>
    </service>

    <service verb="include" noun="ProductEvaluationStatement">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
            <parameter name="statementId" required="true" />
        </in-parameters>
        <out-parameters>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <if condition="productEvaluation.statusId != 'PeRequirementsSelection'">
                <return error="true" message="Cannot edit statements in this status." />
            </if>

            <entity-find entity-name="coarchy.product.ProductEvaluationStatement"
                list="existingStatementList">
                <econdition field-name="productEvaluationId" />
                <econdition field-name="statementId" />
            </entity-find>

            <if condition="!existingStatementList">
                <service-call name="create#coarchy.product.ProductEvaluationStatement"
                    in-map="[productEvaluationId:productEvaluationId, statementId:statementId]" />             
            </if>
        </actions>
    </service>

    <!-- ================= -->
    <!-- Response Services -->
    <!-- ================= -->

    <service verb="add" noun="ProductEvaluationResponse">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
            <parameter name="activityId"  />
            <parameter name="statementId"  />
            <parameter name="implementationStatusEnumId" required="true" />
            <parameter name="rating" type="Integer" />
            <parameter name="comments" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <if condition="productEvaluation.statusId != 'PeAwaitingVendorResponse'">
                <return error="true" message="Cannot add response in this status." />
            </if>
            
            <!-- find if party is internal org -->
            <entity-find-count entity-name="mantle.party.PartyRelationship" count-field="partyRelationshipCount">
                <date-filter/>
                <econdition field-name="relationshipTypeEnumId" value="PrtMember"/>
                <econdition field-name="toRoleTypeId" value="OrgInternal"/>
                <econdition field-name="fromPartyId" from="ec.user.userAccount.partyId"/>
                <econdition field-name="toPartyId" from="productEvaluation.organizationId"/>
            </entity-find-count>
            <set field="isUserOrgMember" from="partyRelationshipCount > 0"/>

            <set field="lastEditedByUserId" from="ec.user.userId" />

            <!-- find existing response, if exists, update, otherwise create -->
            <entity-find entity-name="coarchy.product.ProductEvaluationResponse"
                list="productEvalResponseList">
                <econdition field-name="productEvaluationId" />
                <econdition field-name="evaluationByEnumId" value="EbInternal" ignore="!isUserOrgMember" />
                <econdition field-name="evaluationByEnumId" value="EbVendor" ignore="isUserOrgMember"/>
                <econdition field-name="activityId" ignore="!activityId"/>
                <econdition field-name="statementId" ignore="!statementId"/>
            </entity-find>

            <if condition="!productEvalResponseList">
                <service-call name="create#coarchy.product.ProductEvaluationResponse"
                    in-map="[productEvaluationId:productEvaluationId, activityId:activityId, statementId:statementId, implementationStatusEnumId:implementationStatusEnumId, rating:rating, comments:comments, lastEditedByUserId: lastEditedByUserId, evaluationByEnumId: isUserOrgMember?'EbInternal':'EbVendor']" />
                <else>
                    <set field="productEvalResponse" from="productEvalResponseList[0]" />
                    <service-call name="update#coarchy.product.ProductEvaluationResponse"
                        in-map="[productEvaluationResponseId:productEvalResponse.productEvaluationResponseId, implementationStatusEnumId:implementationStatusEnumId, rating:rating, comments:comments, lastEditedByUserId: lastEditedByUserId]" />
                </else>
            </if>
        </actions>
    </service>

    <service verb="get" noun="ProductEvaluationResponseStats">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
        </in-parameters>
        <out-parameters>
            <parameter name="internalResponseByActivity" type="Map" />
            <parameter name="vendorResponseByActivity" type="Map" />
            <parameter name="internalResponseByStatement" type="Map" />
            <parameter name="vendorResponseByStatement" type="Map" />
            <parameter name="totalVendorCount" type="Integer" />
            <parameter name="allVendorsResponded" type="Boolean" />
            <parameter name="internalEvaluationComplete" type="Boolean" />
        </out-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <set field="vendorResponseByActivity" from="[:]"/>
            <set field="internalResponseByActivity" from="[:]"/>
            <set field="vendorResponseByStatement" from="[:]"/>
            <set field="internalResponseByStatement" from="[:]"/>

            <!-- see if all activites on the product evaluation have responses from all vendors, if
            they do, change status to complete -->
            <service-call name="coarchy.ProductEvaluationServices.get#ProductEvaluationActivites"
                in-map="[productEvaluationId:productEvaluationId]" out-map="productEvalActivities" />
            <service-call name="coarchy.ProductEvaluationServices.get#ProductEvaluationStatements"
                in-map="[productEvaluationId:productEvaluationId]" out-map="productEvalStatements" />

            <!-- get vendors on the product evaluation -->
            <entity-find entity-name="coarchy.product.ProductEvaluationParty"
                list="productEvalPartyList">
                <date-filter />
                <econdition field-name="productEvaluationId" />
                <econdition field-name="roleTypeId" value="VendorRepresentative" />
                <econdition field-name="statusId" operator="in" value="PepInvited,PepAccepted" />
            </entity-find>
            <set field="vendorPartyIds" from="productEvalPartyList*.partyId" />
            <set field="totalVendorCount" from="vendorPartyIds.size()" />

            <iterate list="productEvalActivities.activityIds" entry="activityId">
                <entity-find-count entity-name="coarchy.product.ProductEvaluationResponse"
                    count-field="productEvalResponseCount">
                    <econdition field-name="productEvaluationId" />
                    <econdition field-name="activityId" />
                    <econdition field-name="evaluationByEnumId" value="EbVendor" />
                </entity-find-count>
                <script>addToBigDecimalInMap(activityId, productEvalResponseCount, vendorResponseByActivity)</script>

                <entity-find-count entity-name="coarchy.product.ProductEvaluationResponse"
                    count-field="productEvalResponseCount">
                    <econdition field-name="productEvaluationId" />
                    <econdition field-name="activityId" />
                    <econdition field-name="evaluationByEnumId" value="EbInternal" />
                </entity-find-count>
                <script>addToBigDecimalInMap(activityId, productEvalResponseCount, internalResponseByActivity)</script>
            </iterate>
                        
            <iterate list="productEvalStatements.valueStatementIds" entry="valueStatementId">
                <entity-find-count entity-name="coarchy.product.ProductEvaluationResponse"
                    count-field="productEvalResponseCount">
                    <econdition field-name="productEvaluationId" />
                    <econdition field-name="statementId" from="valueStatementId" />
                    <econdition field-name="evaluationByEnumId" value="EbVendor" />
                </entity-find-count>
                <script>addToBigDecimalInMap(valueStatementId, productEvalResponseCount, vendorResponseByStatement)</script>

                <entity-find-count entity-name="coarchy.product.ProductEvaluationResponse"
                    count-field="productEvalResponseCount">
                    <econdition field-name="productEvaluationId" />
                    <econdition field-name="statementId" from="valueStatementId" />
                    <econdition field-name="evaluationByEnumId" value="EbInternal" />
                </entity-find-count>
                <script>addToBigDecimalInMap(valueStatementId, productEvalResponseCount, internalResponseByStatement)</script>
            </iterate>

            <!-- get all values of vendorResponseByActivity in list -->
            <set field="vendorResponseCountList" from="vendorResponseByActivity.values() + vendorResponseByStatement.values()" />
            <set field="allVendorsResponded" from="vendorResponseCountList.every{it -> it > 0}" />
            
            <set field="internalResponseCountList" from="internalResponseByActivity.values() + internalResponseByStatement.values()" />
            <set field="internalEvaluationComplete" from="internalResponseCountList.every{it -> it > 0}" />
        </actions>
    </service>

    <!-- =============== -->
    <!-- Status Services -->
    <!-- =============== -->

    <service verb="finalize" noun="ProductEvaluationActivitySelection">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" for-update="true" />

            <!-- Make sure we're in the correct status -->
            <if condition="productEvaluation.statusId != 'PeRequirementsSelection'">
                <return error="true" message="Cannot finalize activities in this status." />
            </if>

            <!-- Make sure we have at least one activity to Evaluate -->
            <service-call name="coarchy.ProductEvaluationServices.get#ProductEvaluationActivites"
                in-map="[productEvaluationId:productEvaluationId]" out-map="productEvalActivities" />

            <if condition="productEvalActivities.activityIds?.size() == 0">
                <return error="true" message="Please add at least one activity to evaluate." />
            </if>

            <set field="productEvaluation.statusId" value="PeInviteVendors" />
            <entity-update value-field="productEvaluation" />
        </actions>
    </service>
    
    <service verb="reopen" noun="ProductEvaluationActivitySelection">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" for-update="true" />

            <!-- Make sure we're in the correct status -->
            <if condition="productEvaluation.statusId != 'PeInviteVendors'">
                <return error="true" message="Cannot modify requirements in this status." />
            </if>

            <set field="productEvaluation.statusId" value="PeRequirementsSelection" />
            <entity-update value-field="productEvaluation" />
        </actions>
    </service>

    <service verb="finalize" noun="ProductEvaluationVendorInvitations">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" for-update="true" />

            <!-- Make sure we're in the correct status -->
            <if condition="productEvaluation.statusId != 'PeInviteVendors'">
                <return error="true" message="Cannot complete vendor invitations in this status." />
            </if>

            <!-- Make sure we have at least one invited vendor -->
            <entity-find entity-name="coarchy.product.ProductEvaluationParty"
                list="productEvalPartyList">
                <date-filter />
                <econdition field-name="productEvaluationId" />
                <econdition field-name="roleTypeId" value="VendorRepresentative" />
                <econdition field-name="statusId" operator="not-in" value="PepRejected,PepWithdrew" />
            </entity-find>

            <if condition="productEvalPartyList.size() == 0">
                <return error="true" message="Please invite at least one vendor." />
            </if>

            <!-- send invitations out -->
            <service-call name="coarchy.VendorServices.send#ProductEvaluationInvitations"
                in-map="[productEvaluationId:productEvaluationId]" />

            <!-- update status -->
            <set field="productEvaluation.statusId" value="PeAwaitingVendorResponse" />
            <entity-update value-field="productEvaluation" />
        </actions>
    </service>

    <service verb="cancel" noun="ProductEvaluation">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
        </in-parameters>
        <out-parameters>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" for-update="true" />

            <!-- Make sure we're in the correct status -->
            <if
                condition="!['PeRequirementsSelection', 'PeAwaitingVendorResponse', 'PeInviteVendors'].contains(productEvaluation.statusId)">
                <return error="true" message="Cannot cancel Product Evaluation in this status." />
            </if>

            <!-- update status -->
            <set field="productEvaluation.statusId" value="PeCancelled" />
            <entity-update value-field="productEvaluation" />
        </actions>
    </service>

    <service verb="checkComplete" noun="ProductEvaluation">
        <in-parameters>
            <parameter name="productEvaluationId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="coarchy.product.ProductEvaluation"
                value-field="productEvaluation" />

            <!-- Make sure we're in the correct status -->
            <if condition="!['PeAwaitingVendorResponse'].contains(productEvaluation.statusId)">
                <return />
            </if>

            <!-- see if all activites on the product evaluation have responses from all vendors, if
            they do, change status to complete -->
            <service-call name="coarchy.ProductEvaluationServices.get#ProductEvaluationActivites"
                in-map="[productEvaluationId:productEvaluationId]" out-map="productEvalActivities" />            
            <service-call name="coarchy.ProductEvaluationServices.get#ProductEvaluationStatements"
                in-map="[productEvaluationId:productEvaluationId]" out-map="productEvalStatements" />
                
            <!-- get vendors on the product evaluation -->
            <entity-find entity-name="coarchy.product.ProductEvaluationParty"
                list="productEvalPartyList">
                <date-filter />
                <econdition field-name="productEvaluationId" />
                <econdition field-name="roleTypeId" value="VendorRepresentative" />
                <econdition field-name="statusId" operator="in" value="PepInvited,PepAccepted" />
            </entity-find>
            <set field="vendorPartyIds" from="productEvalPartyList*.partyId" />

            <!-- check if all vendors responded -->
            <set field="allVendorsResponded" from="true" />
            <iterate list="vendorPartyIds" entry="vendorPartyId">
                <if condition="!allVendorsResponded">
                    <break />
                </if>

                <iterate list="productEvalActivities.activityIds" entry="activityId">
                    <entity-find-count entity-name="coarchy.product.ProductEvaluationResponse"
                        count-field="productEvalResponseCount">
                        <econdition field-name="productEvaluationId" />
                        <econdition field-name="activityId" />
                        <!-- <econdition field-name="responsePartyId" from="vendorPartyId" /> -->
                        <econdition field-name="evaluationByEnumId" value="EbVendor" />
                    </entity-find-count>

                    <if condition="!productEvalResponseCount">
                        <set field="allVendorsResponded" from="false" />
                        <break />
                    </if>
                </iterate>
                
                <if condition="allVendorsResponded">
                    <iterate list="productEvalStatements.valueStatementIds" entry="valueStatementId">
                        <entity-find-count entity-name="coarchy.product.ProductEvaluationResponse"
                            count-field="productEvalResponseCount">
                            <econdition field-name="productEvaluationId" />
                            <econdition field-name="statementId" from="valueStatementId" />
                            <!-- <econdition field-name="responsePartyId" from="vendorPartyId" /> -->
                            <econdition field-name="evaluationByEnumId" value="EbVendor" />
                        </entity-find-count>

                        <if condition="!productEvalResponseCount">
                            <set field="allVendorsResponded" from="false" />
                            <break />
                        </if>
                    </iterate>
                </if>
            </iterate>

            <!-- check if all internal responded -->
            <set field="allInternalResponded" from="true" />
            <iterate list="productEvalActivities.activityIds" entry="activityId">
                <entity-find-count entity-name="coarchy.product.ProductEvaluationResponse"
                    count-field="productEvalResponseCount">
                    <econdition field-name="productEvaluationId" />
                    <econdition field-name="activityId" />
                    <!-- <econdition field-name="responsePartyId" operator="not-in" from="vendorPartyId" /> -->
                    <econdition field-name="evaluationByEnumId" value="EbInternal" />
                </entity-find-count>

                <if condition="!productEvalResponseCount">
                    <set field="allInternalResponded" from="false" />
                    <break />
                </if>
            </iterate>
            
            <if condition="allInternalResponded">
                <iterate list="productEvalStatements.valueStatementIds" entry="valueStatementId">
                    <entity-find-count entity-name="coarchy.product.ProductEvaluationResponse"
                        count-field="productEvalResponseCount">
                        <econdition field-name="productEvaluationId" />
                        <econdition field-name="statementId" from="valueStatementId" />
                        <!-- <econdition field-name="responsePartyId" operator="not-in" from="vendorPartyId" /> -->
                        <econdition field-name="evaluationByEnumId" value="EbInternal" />
                    </entity-find-count>

                    <if condition="!productEvalResponseCount">
                        <set field="allInternalResponded" from="false" />
                        <break />
                    </if>
                </iterate>
            </if>

            <!-- update status -->
            <if condition="allVendorsResponded &amp;&amp; allInternalResponded">
                <set field="productEvaluation.statusId" value="PeCompleted" />
                <entity-update value-field="productEvaluation" />
            </if>

        </actions>
    </service>

</services>